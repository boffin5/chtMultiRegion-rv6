/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  8                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Which of the steps to run

castellatedMesh   true;
snap              true;
addLayers         true;

geometry
{
    
    rv6-open.stl
    {
        type triSurfaceMesh;
        name            bod;
    }
    
    refinementBox1
    {
        type searchableBox;
        min ( -1.0  -0.55  -0.25);
        max ( 5.0   0.0   1.5);
    }
    
    refinementBox2
    {
        type searchableBox;
        min ( 0.9 -0.5  -0.15);
        max ( 3.6  0.0   0.60);
    }
    
    refinementBox3
    {
        type searchableBox;
        min ( 1.25 -0.45  -0.10);
        max ( 2.8  0.0   0.40);
    }
    
    refinementBox4
    {
        type searchableBox;
        min ( 1.35 -0.35  -0.02);
        max ( 1.85  0.0   0.35);
    }
    
    refinementBox5     
    {
        type searchableBox;
        min ( -0.25 -0.45  0.4);
        max ( 0.6  0.0   1.0);
    }
    
    refinementBox6     
    {
        type searchableBox;
        min ( 2.0 -0.31  0.05);
        max ( 2.12  0.0   0.3);
    }
};

// Settings for the castellatedMesh generation.

castellatedMeshControls
{

    maxLocalCells 2000000;

    maxGlobalCells 4000000;

    minRefinementCells 0;

    maxLoadUnbalance 0.10;

    nCellsBetweenLevels 1;    //5

    // Explicit feature edge refinement
    // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    features
    (     
        { file "rv6-open.eMesh"; level 0; }
        { file "gutter-a.eMesh"; level 5; }
        { file "gutter-b.eMesh"; level 5; }
        { file "gutter-c.eMesh"; level 5; }
        { file "gutter-d.eMesh"; level 5; }
        { file "gutter-e.eMesh"; level 5; }
        { file "gutter-f.eMesh"; level 5; }
    );



    // Surface based refinement
    // ~~~~~~~~~~~~~~~~~~~~~~~~

    refinementSurfaces
    {  
        bod
        {
            level (2 2); 
        }
               
    }


    // Resolve sharp angles
    resolveFeatureAngle 20;
    

    // Region-wise refinement
    // ~~~~~~~~~~~~~~~~~~~~~~

    // Specifies refinement level for cells in relation to a surface. One of
    // three modes
    // - distance. 'levels' specifies per distance to the surface the
    //   wanted refinement level. The distances need to be specified in
    //   descending order.
    // - inside. 'levels' is only one entry and only the level is used. All
    //   cells inside the surface get refined up to the level. The surface
    //   needs to be closed for this to be possible.
    // - outside. Same but cells outside.

    refinementRegions
    {
        refinementBox1
        {
            mode inside;
            levels ((1E15 2));
        }
        
        refinementBox2
        {
            mode inside;
            levels ((1E15 3));
        }
        
        refinementBox3
        {
            mode inside;
            levels ((1E15 5));
        }
        
        refinementBox4
        {
            mode inside;
            levels ((1E15 6));
        }
        
        refinementBox5
        {
            mode inside;
            levels ((1E15 3));
        }
        
        refinementBox6
        {
            mode inside;
            levels ((1E15 6));
        }
    }

    locationInMesh (0.01 -0.01 0.0);

    allowFreeStandingZoneFaces no;
}

// Settings for the snapping.

snapControls
{
    //- Number of patch smoothing iterations before finding correspondence
    //  to surface
    nSmoothPatch 3;

    //- Relative distance for points to be attracted by surface feature point
    //  or edge. True distance is this factor times local
    //  maximum edge length.
    tolerance 1.2;

    //- Number of mesh displacement relaxation iterations.
    nSolveIter 185;

    //- Maximum number of snapping relaxation iterations. Should stop
    //  before upon reaching a correct mesh.
    nRelaxIter 4;

    // Feature snapping

        //- Number of feature edge snapping iterations.
        //  Leave out altogether to disable.
        nFeatureSnapIter 5;

        //- Detect (geometric only) features by sampling the surface
        //  (default=false).
        implicitFeatureSnap false;

        //- Use castellatedMeshControls::features (default = true)
        explicitFeatureSnap true;

        //- Detect points on multiple surfaces (only for explicitFeatureSnap)
        multiRegionFeatureSnap false;
}

// Settings for the layer addition.
addLayersControls
{
    // Are the thickness parameters below relative to the undistorted
    // size of the refined cell outside layer (true) or absolute sizes (false).
    relativeSizes true;

    // Per final patch (so not geometry!) the layer information
    layers
    {
        bod
        {
            nSurfaceLayers  2;
        }
                             
    }

    // Expansion factor for layer mesh
    expansionRatio 1.1;

    // Wanted thickness of final added cell layer. If multiple layers
    // is the
    // thickness of the layer furthest away from the wall.
    // Relative to undistorted size of cell outside layer.
    // is the thickness of the layer furthest away from the wall.
    // See relativeSizes parameter.
    finalLayerThickness 0.25;

    // Minimum thickness of cell layer. If for any reason layer
    // cannot be above minThickness do not add layer.
    // Relative to undistorted size of cell outside layer.
    minThickness 0.1;

    // If points get not extruded do nGrow layers of connected faces that are
    // also not grown. This helps convergence of the layer addition process
    // close to features.
    // Note: changed(corrected) w.r.t 17x! (didn't do anything in 17x)
    nGrow 0;

    // Advanced settings

    // When not to extrude surface. 0 is flat surface, 90 is when two faces
    // are perpendicular
    featureAngle 85;

    // At non-patched sides allow mesh to slip if extrusion direction makes
    // angle larger than slipFeatureAngle.
    slipFeatureAngle 25;

    // Maximum number of snapping relaxation iterations. Should stop
    // before upon reaching a correct mesh.
    nRelaxIter 5;

    // Number of smoothing iterations of surface normals
    nSmoothSurfaceNormals 4;

    // Number of smoothing iterations of interior mesh movement direction
    nSmoothNormals 3;

    // Smooth layer thickness over surface patches
    nSmoothThickness 10;

    // Stop layer growth on highly warped cells
    maxFaceThicknessRatio 0.5;

    // Reduce layer growth where ratio thickness to medial
    // distance is large
    maxThicknessToMedialRatio 0.2;

    // Angle used to pick up medial axis points
    // Note: changed(corrected) w.r.t 17x! 90 degrees corresponds to 130 in 17x.
    minMedianAxisAngle 90;


    // Create buffer region for new layer terminations
    nBufferCellsNoExtrude 0;


    // Overall max number of layer addition iterations. The mesher will exit
    // if it reaches this number of iterations; possibly with an illegal
    // mesh.
    nLayerIter 50;
}



// Generic mesh quality settings. At any undoable phase these determine
// where to undo.

meshQualityControls
{
    #include "meshQualityDict"


    // Advanced

    //- Number of error distribution iterations
    nSmoothScale 4;
    //- amount to scale back displacement at error points
    errorReduction 0.75;
}

/*meshQualityControls
{
    #include "meshQualityDict"
}*/

// Advanced

// Write flags
writeFlags
(
    scalarLevels
    layerSets
    layerFields     // write volScalarField for layer coverage
);


// Merge tolerance. Is fraction of overall bounding box of initial mesh.
// Note: the write tolerance needs to be higher than this.
mergeTolerance 1e-6;


// ************************************************************************* //
